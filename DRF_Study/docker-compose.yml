#version: '3' # docker compose verison
#services: # docker compose가 실행할 서비스 목
#  backend: # 서비스
#    build:
#      context: . # 현재 폴더를 빌드할 폴더로 선택
#      dockerfile: Dockerfile
#    ports:
#      - 8000:8000
#    volumes:
#      - .:/DRF # . (현재 로컬 폴더)의 모든 파일과 /app을 링크하여 모든 파일 변경사항 반영
#    depends_on:
#      - mysql_db
#
#  mysql_db:
#    image: mysql:8.0
#    ports:
#      - "3366:3306"
#    environment:
#      MYSQL_DATABASE: boards # 해당 이름을 가진 db가 localhost에 생성됨
#      MYSQL_USER: root # db가 생성될 때 유저도 같이 생성
#      MYSQL_PASSWORD: 1234
#      MYSQL_ROOT_PASSWORD: 1234 # root 유저의 패스워드
#    command:
#      - --character-set-server=utf8mb4
#      - --collation-server=utf8mb4_unicode_ci
#    volumes:
#      - .dbdata:/var/lib/mysql # db data가 저장 될 경로
version: '3'
services:
  db:
    image: mysql
    ports:
      - 3366:3306
    environment:
      - MYSQL_DATABASE=boards
      - MYSQL_USER=root
      - MYSQL_PASSWORD=1234
  django:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/DRF
    command: ["./manage.py", "runserver", "0:8000", "--settings=conf.settings.local"]
    depends_on:
      - db
    restart: always
    ports:
      - 8000:8000